[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "textual-mqtt-monitor"
version = "0.1.0"
description = "A Textual TUI application to monitor rtl_433 MQTT messages."
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE" }
# Add your author details
# authors = [
#   { name="Your Name", email="your.email@example.com" },
# ]
# Add keywords
# keywords = ["mqtt", "tui", "textual", "rtl_433", "monitor"]

# Add classifiers from https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Terminals",
    "Topic :: Communications",
    "Topic :: Home Automation",
    "Topic :: System :: Monitoring",
]

dependencies = [
    "textual>=0.50.0,<1.0.0",
    "paho-mqtt>=2.0.0,<3.0.0",
]

# Optional: Define console script entry point if you make it installable
# [project.scripts]
# mqtt-monitor = "mqtt_monitor:main_cli" # Assumes you wrap main() in main_cli()

[tool.ruff]
# Target the Python version you intend to support
target-version = "py38"

# Exclude common directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "env",
    ".env",
]

# Set line length
line-length = 119

[tool.ruff.lint]
select = ["E", "F", "W", "I", "B"]
ignore = ["E722"] # Bare Except
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

[tool.ruff.format]
# Enable formatting like Black
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
# Configure import sorting if needed
known-first-party = ["mqtt_monitor"] # Treat your script as first-party